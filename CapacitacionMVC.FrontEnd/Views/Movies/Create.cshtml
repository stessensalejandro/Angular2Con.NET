@model CapacitacionMVC.FrontEnd.Models.MovieCreateEditViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@if (ViewBag.MovieName != null)
{
    <p>
        <span class="label label-success">The @ViewBag.MovieName movie was successfully created!</span>
    </p>
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Movie</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.Name)
                @Html.ValidationMessageFor(model => model.Movie.Name)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.ReleaseDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.ReleaseDate)
                @Html.ValidationMessageFor(model => model.Movie.ReleaseDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Plot, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.Plot)
                @Html.ValidationMessageFor(model => model.Movie.Plot)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.CoverLink, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.CoverLink)
                @Html.ValidationMessageFor(model => model.Movie.CoverLink)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.Runtime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Movie.Runtime)
                @Html.ValidationMessageFor(model => model.Movie.Runtime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Movie.GenreId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Movie.GenreId, Model.Genres.Select(s => new SelectListItem() { Text = s.Name, Value = s.Id.ToString() }))
                @Html.ValidationMessageFor(model => model.Movie.GenreId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" name="submitCommand" value="Save" class="btn btn-primary" />
                <input type="submit" name="submitCommand" value="Save & New" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
